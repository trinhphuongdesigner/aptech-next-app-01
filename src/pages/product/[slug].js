import { Inter } from "next/font/google";
import Head from "next/head";
import axios from 'axios';
import { useEffect, useState } from "react";

export default function ProductDetail(props) {
  const { products } = props;

  // const [products, setProducts] = useState([]);

  // useEffect(() => {
  //   axios
  //   .get('http://localhost:9000/products')
  //   .then((response) => {
  //     const { data } = response;

  //     setProducts(data);
  //   })
  //   .catch((err) => {
  //     console.error(err);
  //   });
  // }, [])

  return (
    <>
      <Head>
        <title>Ban chai da nang</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ul>
        {
          products?.length > 0 && (
            products.map((item) => <li key={item._id}>{item.name}</li>)
          )
        }
      </ul>
    </>
  );
}

// SSG
// export async function getStaticPaths() {
//   return {
//     paths: [],
//     fallback: true,
//   }
// }

// export async function getStaticProps(content) {
//   try {
//     const { params, query } = content;
//     console.log('««««« content »»»»»', content);
//     console.log('««««« params »»»»»', params);
//     console.log('««««« query »»»»»', query);
//     const response = await fetch('http://localhost:9000/products');
//     const products = await response.json();

//     return {
//       props: {
//         products,
//       },
//       revalidate: 5,
//     };
//   } catch (error) {
//     return {
//       notFound: true,
//     };
//   }
// }


// SSR
export async function getServerSideProps(req) {
  try {
    const { params, query } = req;
    console.log('««««« req »»»»»', req);
    const response = await fetch('http://localhost:9000/products');
    const products = await response.json();

    return {
      props: {
        products,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
}
